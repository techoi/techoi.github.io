{"version":3,"sources":["webpack:///./src/templates/tags-list-template.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_Sidebar__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_5__","TagsListTemplate","_ref","data","_data$site$siteMetada","site","siteMetadata","title","subtitle","group","allMarkdownRemark","a","createElement","description","map","tag","key","fieldValue","to","kebabCase","totalCount"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAAO,EAAAE,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAgCaI,EAAK,WAmBHU,UA5CU,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAAWC,EAIjCD,EAAKE,KAAKC,aAFZC,EAFmCH,EAEnCG,MACAC,EAHmCJ,EAGnCI,SAEMC,EAAUN,EAAKO,kBAAfD,MAER,OACEhB,EAAAkB,EAAAC,cAACd,EAAA,EAAD,CAAQS,MAAK,UAAYA,EAASM,YAAaL,GAC7Cf,EAAAkB,EAAAC,cAACb,EAAA,EAAD,MACAN,EAAAkB,EAAAC,cAACZ,EAAA,EAAD,CAAMO,MAAM,QACVd,EAAAkB,EAAAC,cAAA,UACGH,EAAMK,IAAI,SAACC,GAAD,OACTtB,EAAAkB,EAAAC,cAAA,MAAII,IAAKD,EAAIE,YACXxB,EAAAkB,EAAAC,cAACjB,EAAA,KAAD,CAAMuB,GAAE,QAAUC,IAAUJ,EAAIE,YAAxB,KACLF,EAAIE,WADP,KACqBF,EAAIK,WADzB","file":"component---src-templates-tags-list-template-js-727d2f559515ef0b7217.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Page from '../components/Page';\n\nconst TagsListTemplate = ({ data }) => {\n  const {\n    title,\n    subtitle\n  } = data.site.siteMetadata;\n  const { group } = data.allMarkdownRemark;\n\n  return (\n    <Layout title={`Tags - ${title}`} description={subtitle}>\n      <Sidebar />\n      <Page title=\"Tags\">\n        <ul>\n          {group.map((tag) => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tag/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query TagsListQuery {\n    site {\n      siteMetadata {\n        title,\n        subtitle\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default TagsListTemplate;"],"sourceRoot":""}