{"version":3,"sources":["webpack:///./src/templates/index-template.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_Sidebar__WEBPACK_IMPORTED_MODULE_2__","_components_Feed__WEBPACK_IMPORTED_MODULE_3__","_components_Page__WEBPACK_IMPORTED_MODULE_4__","_components_Pagination__WEBPACK_IMPORTED_MODULE_5__","IndexTemplate","_ref","data","pageContext","_data$site$siteMetada","site","siteMetadata","siteTitle","title","siteSubtitle","subtitle","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","pageTitle","a","createElement","description","isIndex"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAyCaI,EAAK,YAgCHS,UAjEO,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAAkBC,EAI3CF,EAAKG,KAAKC,aAFLC,EAFsCH,EAE7CI,MACUC,EAHmCL,EAG7CM,SAIAC,EAKER,EALFQ,YACAC,EAIET,EAJFS,YACAC,EAGEV,EAHFU,YACAC,EAEEX,EAFFW,aACAC,EACEZ,EADFY,aAGMC,EAAUd,EAAKe,kBAAfD,MACFE,EAAYP,EAAc,EAAd,gBAAkCA,EAAlC,MAAmDJ,EAAcA,EAEnF,OACEd,EAAA0B,EAAAC,cAACzB,EAAA,EAAD,CAAQa,MAAOU,EAAWG,YAAaZ,GACrChB,EAAA0B,EAAAC,cAACxB,EAAA,EAAD,CAAS0B,SAAO,IAChB7B,EAAA0B,EAAAC,cAACtB,EAAA,EAAD,KACEL,EAAA0B,EAAAC,cAACvB,EAAA,EAAD,CAAMmB,MAAOA,IACbvB,EAAA0B,EAAAC,cAACrB,EAAA,EAAD,CACEe,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA","file":"component---src-templates-index-template-js-ef8e4b87d8c3899474f4.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Feed from '../components/Feed';\r\nimport Page from '../components/Page';\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst IndexTemplate = ({ data, pageContext }) => {\r\n  const {\r\n    title: siteTitle,\r\n    subtitle: siteSubtitle\r\n  } = data.site.siteMetadata;\r\n\r\n  const {\r\n    currentPage,\r\n    hasNextPage,\r\n    hasPrevPage,\r\n    prevPagePath,\r\n    nextPagePath\r\n  } = pageContext;\r\n\r\n  const { edges } = data.allMarkdownRemark;\r\n  const pageTitle = currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\r\n\r\n  return (\r\n    <Layout title={pageTitle} description={siteSubtitle}>\r\n      <Sidebar isIndex />\r\n      <Page>\r\n        <Feed edges={edges} />\r\n        <Pagination\r\n          prevPagePath={prevPagePath}\r\n          nextPagePath={nextPagePath}\r\n          hasPrevPage={hasPrevPage}\r\n          hasNextPage={hasNextPage}\r\n        />\r\n      </Page>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        subtitle\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n        limit: $postsLimit,\r\n        skip: $postsOffset,\r\n        filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } },\r\n        sort: { order: DESC, fields: [frontmatter___date] }\r\n      ){\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            categorySlug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n            category\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexTemplate;\r\n"],"sourceRoot":""}